{
  "components": {
    "responses": {},
    "schemas": {
      "ActivityId": {
        "description": "Activity id",
        "example": "4a8c6f21-0fac-4705-98c3-e1f7d5e2cd6d",
        "title": "ActivityId",
        "type": "string",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.ActivityId",
        "x-validate": null
      },
      "ActivityResponse": {
        "description": "Activity information",
        "example": {
          "end_date": 1664422123,
          "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
          "is_interested": false,
          "location": "At my house",
          "name": "Fun Activity",
          "notes": "some note",
          "phone": "3101234567",
          "price_per_person": {
            "amount": 1000,
            "currency": "USD"
          },
          "price_per_person_string": "$10.00",
          "start_date": 1664422123,
          "trip_id": "3a8c6f21-0fac-4705-98c3-e1f7d5e2cd6d",
          "user": {
            "email": "joebruin@gmail.com",
            "first_name": "Joe",
            "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
            "last_name": "Bruin",
            "phone": "3101234567",
            "username": "joebruin"
          },
          "website": "http://example.com"
        },
        "properties": {
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "id": {
            "description": "Activity ID",
            "format": "uuid",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "is_interested": {
            "description": "true/false if the user is interested in this activity, or null if not specified",
            "type": "boolean",
            "x-struct": null,
            "x-validate": null
          },
          "location": {
            "description": "Location",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "notes": {
            "description": "Notes",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "phone": {
            "description": "Phone",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "price_per_person": {
            "$ref": "#/components/schemas/TripPlannerMoney"
          },
          "price_per_person_string": {
            "description": "Price per person in string form",
            "format": "<currency_symbol><amount>",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "trip_id": {
            "$ref": "#/components/schemas/TripId"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "website": {
            "description": "Website",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "ActivityResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.ActivityResponse",
        "x-validate": null
      },
      "CurrentUserResponse": {
        "description": "Current User information",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "title": "CurrentUserResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.CurrentUserResponse",
        "x-validate": null
      },
      "LoginRequest": {
        "description": "Login request body",
        "example": {
          "password": "bruin1919",
          "username": "joebruin"
        },
        "properties": {
          "password": {
            "description": "Password",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "username": {
            "description": "Username",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.LoginRequest",
        "x-validate": null
      },
      "NewActivityRequest": {
        "description": "New Activity information",
        "example": {
          "end_date": 1664422123,
          "location": "At my house",
          "name": "Hawaii",
          "notes": "some note",
          "phone": "3101234567",
          "price_per_person": {
            "amount": 1000,
            "currency": "USD"
          },
          "start_date": 1664422123,
          "website": "http://example.com"
        },
        "properties": {
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "location": {
            "description": "Location",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "pattern": "[a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "notes": {
            "description": "Notes",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "phone": {
            "description": "Phone",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "price_per_person": {
            "$ref": "#/components/schemas/TripPlannerMoney"
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "website": {
            "description": "Website",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "required": [
          "name"
        ],
        "title": "NewActivityRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.NewActivityRequest",
        "x-validate": null
      },
      "NewTripRequest": {
        "description": "Trip information",
        "example": {
          "description": "Let's go to Hawaii",
          "end_date": 1664422123,
          "name": "Hawaii",
          "start_date": 1664422123
        },
        "properties": {
          "description": {
            "description": "Description",
            "pattern": "[a-zA-Z]*",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "pattern": "[a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          }
        },
        "required": [
          "name"
        ],
        "title": "NewTripRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.NewTripRequest",
        "x-validate": null
      },
      "RefreshTokenRequest": {
        "description": "Refresh token request body",
        "example": {
          "refresh_token": "<refresh_token>"
        },
        "properties": {
          "refresh_token": {
            "description": "Refresh token to get a new refresh token",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.RefreshTokenRequest",
        "x-validate": null
      },
      "RegisterUserRequest": {
        "description": "User information",
        "example": {
          "email": "joebruin@gmail.com",
          "first_name": "Joe",
          "last_name": "Bruin",
          "password": "bruin1919",
          "phone": "3101234567",
          "username": "joebruin"
        },
        "properties": {
          "email": {
            "description": "Email Address",
            "format": "email",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "first_name": {
            "description": "First Name",
            "pattern": "[a-zA-Z][a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "last_name": {
            "description": "Last Name",
            "pattern": "[a-zA-Z][a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "password": {
            "description": "Password",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "phone": {
            "description": "Phone Number",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "username": {
            "description": "Username",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "required": [
          "first_name",
          "last_name",
          "username",
          "password",
          "email"
        ],
        "title": "RegisterUserRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.RegisterUserRequest",
        "x-validate": null
      },
      "TokensResponse": {
        "description": "Authentication tokens",
        "example": {
          "access_token": "AYjcyMzY3ZDhiNmJkNTY",
          "refresh_token": "RjY2NjM5NzA2OWJjuE7c"
        },
        "properties": {
          "access_token": {
            "description": "authentication access token",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "refresh_token": {
            "description": "authentication refresh token",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "TokensResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.TokensResponse",
        "x-validate": null
      },
      "TripId": {
        "description": "Trip id",
        "example": "3a8c6f21-0fac-4705-98c3-e1f7d5e2cd6d",
        "title": "TripId",
        "type": "string",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.TripId",
        "x-validate": null
      },
      "TripPlannerMoney": {
        "description": "Money object",
        "properties": {
          "amount": {
            "description": "Amount",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "currency": {
            "description": "Currency Code",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "TripPlannerMoney",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.TripPlannerMoney",
        "x-validate": null
      },
      "TripResponse": {
        "description": "Trip information",
        "example": {
          "description": "Let's have fun",
          "end_date": 1664422123,
          "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
          "name": "Hawaii Trip",
          "owner": {
            "email": "joebruin@gmail.com",
            "first_name": "Joe",
            "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
            "last_name": "Bruin",
            "phone": "3101234567",
            "username": "joebruin"
          },
          "start_date": 1664422123,
          "users": [
            {
              "email": "joebruin@gmail.com",
              "first_name": "Joe",
              "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
              "last_name": "Bruin",
              "phone": "3101234567",
              "username": "joebruin"
            }
          ]
        },
        "properties": {
          "description": {
            "description": "Description",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "id": {
            "description": "Trip ID",
            "format": "uuid",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "owner": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "TripResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.TripResponse",
        "x-validate": null
      },
      "TripsResponse": {
        "description": "Trip Information List",
        "items": {
          "$ref": "#/components/schemas/TripResponse"
        },
        "title": "TripsResponse",
        "type": "array",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.TripsResponse",
        "x-validate": null
      },
      "UpdateActivityRequest": {
        "description": "Update Activity Request information",
        "example": {
          "end_date": 1664422129,
          "location": "New place",
          "name": "New Hawaii",
          "notes": "some updated note",
          "phone": "3101234567",
          "price_per_person": {
            "amount": 4000,
            "currency": "USD"
          },
          "start_date": 1664422129,
          "website": "http://example.com"
        },
        "properties": {
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "location": {
            "description": "Location",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "pattern": "[a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "notes": {
            "description": "Notes",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "phone": {
            "description": "Phone",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "price_per_person": {
            "$ref": "#/components/schemas/TripPlannerMoney"
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "website": {
            "description": "Website",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "UpdateActivityRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.UpdateActivityRequest",
        "x-validate": null
      },
      "UpdateTripRequest": {
        "description": "Update Trip information",
        "example": {
          "description": "Let's go to New Hawaii",
          "end_date": 1664422123,
          "name": "New Hawaii",
          "start_date": 1664422123
        },
        "properties": {
          "description": {
            "description": "Description",
            "pattern": "[a-zA-Z]*",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "end_date": {
            "description": "End Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          },
          "name": {
            "description": "Name",
            "pattern": "[a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "start_date": {
            "description": "Start Date",
            "type": "integer",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "UpdateTripRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.UpdateTripRequest",
        "x-validate": null
      },
      "UserAuthResponse": {
        "description": "User and authentication information",
        "properties": {
          "tokens": {
            "$ref": "#/components/schemas/TokensResponse"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "title": "UserAuthResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.UserAuthResponse",
        "x-validate": null
      },
      "UserResponse": {
        "description": "User information",
        "example": {
          "email": "joebruin@gmail.com",
          "first_name": "Joe",
          "id": "02ef9c5f-29e6-48fc-9ec3-7ed57ed351f6",
          "last_name": "Bruin",
          "phone": "3101234567",
          "username": "joebruin"
        },
        "properties": {
          "email": {
            "description": "Email Address",
            "format": "email",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "first_name": {
            "description": "First Name",
            "pattern": "[a-zA-Z][a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "id": {
            "description": "User ID",
            "format": "uuid",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "last_name": {
            "description": "Last Name",
            "pattern": "[a-zA-Z][a-zA-Z]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "phone": {
            "description": "Phone Number",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          },
          "username": {
            "description": "Username",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "UserResponse",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.UserResponse",
        "x-validate": null
      },
      "VoteOnActivityRequest": {
        "description": "Update Activity Request information",
        "example": {
          "is_interested": true
        },
        "properties": {
          "is_interested": {
            "description": "true/false if the user is interested in this activity, or null if not specified",
            "type": "boolean",
            "x-struct": null,
            "x-validate": null
          }
        },
        "title": "VoteOnActivityRequest",
        "type": "object",
        "x-struct": "Elixir.TripPlannerWeb.V1.OpenApi.OpenApiSchemas.VoteOnActivityRequest",
        "x-validate": null
      }
    },
    "securitySchemes": {
      "authorization": {
        "bearerFormat": "JWT",
        "description": "Token must be provided in the headers via `Authorization: Bearer <token>`",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "The API for the Trip Planner App",
    "title": "trip_planner",
    "version": "0.1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/sessions/login": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Login",
        "operationId": "SessionController.login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "description": "The attributes needed to login",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            },
            "description": "User info and Auth tokens"
          }
        },
        "summary": "Login",
        "tags": [
          "sessions"
        ]
      }
    },
    "/api/v1/sessions/logout": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Logout by deleting the user's token",
        "operationId": "SessionController.logout",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "description": "The attributes needed to logout",
          "required": true
        },
        "responses": {
          "204": {
            "description": "204"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Logout by deleting the user's token",
        "tags": [
          "sessions"
        ]
      }
    },
    "/api/v1/sessions/refresh_token": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Refresh the current user's auth tokens",
        "operationId": "SessionController.refresh_token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "description": "The attributes needed to refresh a token",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensResponse"
                }
              }
            },
            "description": "Auth tokens"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Refresh the current user's auth tokens",
        "tags": [
          "sessions"
        ]
      }
    },
    "/api/v1/trips": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get all trips of current user",
        "operationId": "TripController.index",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripsResponse"
                }
              }
            },
            "description": "List of trips of current user"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get all trips of current user",
        "tags": [
          "trips"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Create a trip",
        "operationId": "TripController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTripRequest"
              }
            }
          },
          "description": "The attributes needed to create a new trip",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            },
            "description": "Info of the created trip"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create a trip",
        "tags": [
          "trips"
        ]
      }
    },
    "/api/v1/trips/{trip_id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "Delete a specific trip",
        "operationId": "TripController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete a specific trip",
        "tags": [
          "trips"
        ]
      },
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get a trip by an ID",
        "operationId": "TripController.show",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            },
            "description": "Info of the trip"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get a trip by an ID",
        "tags": [
          "trips"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "Update a specific trip",
        "operationId": "TripController.update",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripRequest"
              }
            }
          },
          "description": "The attributes needed to update a trip",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            },
            "description": "Info of the updated trip"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update a specific trip",
        "tags": [
          "trips"
        ]
      },
      "put": {
        "callbacks": {},
        "deprecated": false,
        "description": "Update a specific trip",
        "operationId": "TripController.update (2)",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripRequest"
              }
            }
          },
          "description": "The attributes needed to update a trip",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            },
            "description": "Info of the updated trip"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update a specific trip",
        "tags": [
          "trips"
        ]
      }
    },
    "/api/v1/trips/{trip_id}/activities": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Create an activity",
        "operationId": "ActivityController.create",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewActivityRequest"
              }
            }
          },
          "description": "The attributes needed to create a new activity",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Info of the created activity"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create an activity",
        "tags": [
          "activities"
        ]
      }
    },
    "/api/v1/trips/{trip_id}/activities/{activity_id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "Delete a specific activity",
        "operationId": "ActivityController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          },
          {
            "in": "path",
            "name": "activity_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete a specific activity",
        "tags": [
          "activities"
        ]
      },
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get a activity by an ID",
        "operationId": "ActivityController.show",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          },
          {
            "in": "path",
            "name": "activity_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Info of the activity"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get a activity by an ID",
        "tags": [
          "activities"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "Update a specific activity",
        "operationId": "ActivityController.update",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          },
          {
            "in": "path",
            "name": "activity_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityRequest"
              }
            }
          },
          "description": "The attributes needed to update a activity",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Info of the updated activity"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update a specific activity",
        "tags": [
          "activities"
        ]
      },
      "put": {
        "callbacks": {},
        "deprecated": false,
        "description": "Update a specific activity",
        "operationId": "ActivityController.update (2)",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          },
          {
            "in": "path",
            "name": "activity_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityRequest"
              }
            }
          },
          "description": "The attributes needed to update a activity",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Info of the updated activity"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update a specific activity",
        "tags": [
          "activities"
        ]
      }
    },
    "/api/v1/trips/{trip_id}/activities/{activity_id}/vote": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Vote on a specific activity",
        "operationId": "ActivityController.vote",
        "parameters": [
          {
            "in": "path",
            "name": "trip_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TripId"
            }
          },
          {
            "in": "path",
            "name": "activity_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteOnActivityRequest"
              }
            }
          },
          "description": "The attributes needed to vote on an activity",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Info of the updated activity"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Vote on a specific activity",
        "tags": [
          "activities"
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get current user information",
        "operationId": "UserController.get_user_me",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            },
            "description": "Current User Response"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get current user information",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/register": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Register new user",
        "operationId": "UserController.register_user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "description": "The attributes needed to register a new user",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            },
            "description": "User info and Auth tokens"
          }
        },
        "summary": "Register new user",
        "tags": [
          "users"
        ]
      }
    }
  },
  "security": [],
  "servers": [
    {
      "url": "http://localhost:4000",
      "variables": {}
    }
  ],
  "tags": []
}
